{"version":3,"file":"src_app_page_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;;AAAtB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACF;AAEA;AAEmB;AAEvB;IAW5B,eAAe,SAAf,eAAe;;AAAf,eAAe;IAT3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBsB;AACH;AACK;AACC;IAOxC,SAAS,SAAT,SAAS;IAEpB,YAAoB,YAAyB,EAAU,OAAuB;QAA1D,iBAAY,GAAZ,YAAY,CAAa;QAAU,YAAO,GAAP,OAAO,CAAgB;QAC5E,IAAI,CAAC,IAAI,GAAC,IAAI,8CAAK,EAAE,CAAC;IACxB,CAAC;IACD,QAAQ;IACR,CAAC;IACD,IAAI;QACF,cAAc;QACd,OAAO,CAAC,GAAG,CAAC,uDAAc,CAAC,CAAC;QAC5B,IAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,EAAC;YAClE,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,2CAA2C,CAAC,CAAC;YAC/E,OAAO;SACR;QACD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,8DAAqB,EAAE,CAAC,EAAG,EAAC;YAC3C,IAAI,WAAW,GAAG,uDAAc,CAAC,CAAC,CAAC,CAAC;YACpC,IAAG,WAAW,CAAC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC;gBAClF,gBAAgB;gBAChB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;gBACpD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBACtC,OAAO;aACR;SACF;QACD,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,4CAA4C,CAAC,CAAC;IAClF,CAAC;;;;;;AAxBU,SAAS;IALrB,wDAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEjC,CAAC;GACW,SAAS;AAAA","sources":["./src/app/page/login/login-routing.module.ts","./src/app/page/login/login.module.ts","./src/app/page/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport {Users, tmpGlobalUsers} from \"../model/user\";\nimport {ToastService} from \"../service/ToastService\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  user:Users;\n  constructor(private toastservice:ToastService, private navCtrl : NavController) {\n    this.user=new Users();\n  }\n  ngOnInit() {\n  }\n  save(){\n    // local check\n    console.log(tmpGlobalUsers);\n    if(this.user.username === undefined || this.user.pass === undefined){\n      this.toastservice.showErrrorToast(\"login fail, username or password is empty\");\n      return;\n    }\n    for(var i=0; i < tmpGlobalUsers.length; i ++){\n      var regist_user = tmpGlobalUsers[i];\n      if(regist_user.username == this.user.username && regist_user.pass == this.user.pass){\n        // jump to login\n        this.toastservice.showSuccessToast(\"login success\");\n        this.navCtrl.navigateForward('/main');\n        return;\n      }\n    }\n    this.toastservice.showErrrorToast(\"login fail, username or password not right\");\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}